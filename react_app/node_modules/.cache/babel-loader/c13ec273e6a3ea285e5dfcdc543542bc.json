{"ast":null,"code":"var _jsxFileName = \"/home/pc/ProjectManagement/ProjectManagementApp/react_app/src/index.js\";\nimport React, { useReducer } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { App } from \"./App\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport userReducer from \"./ReduxPractice\"; // Creating store which is used to hold all the states we wmay like to change\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = configureStore({\n  //reducer is a function that takes in the prev value of that state\n  // the action youd like carried out and the new value\n  reducer: {\n    user: userReducer\n  }\n});\nconst root_element = document.getElementById(\"root\");\nconst react_root = createRoot(root_element);\nreact_root.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","useReducer","createRoot","BrowserRouter","App","configureStore","Provider","userReducer","store","reducer","user","root_element","document","getElementById","react_root","render"],"sources":["/home/pc/ProjectManagement/ProjectManagementApp/react_app/src/index.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { App } from \"./App\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport userReducer from \"./ReduxPractice\";\n\n// Creating store which is used to hold all the states we wmay like to change\nconst store = configureStore({\n  //reducer is a function that takes in the prev value of that state\n  // the action youd like carried out and the new value\n\n  reducer: {\n    user: userReducer,\n  },\n});\n\nconst root_element = document.getElementById(\"root\");\nconst react_root = createRoot(root_element);\n\nreact_root.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n);\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,WAAP,MAAwB,iBAAxB,C,CAEA;;;AACA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3B;EACA;EAEAI,OAAO,EAAE;IACPC,IAAI,EAAEH;EADC;AAJkB,CAAD,CAA5B;AASA,MAAMI,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB;AACA,MAAMC,UAAU,GAAGZ,UAAU,CAACS,YAAD,CAA7B;AAEAG,UAAU,CAACC,MAAX,eACE,QAAC,aAAD;EAAA,uBACE,QAAC,QAAD;IAAU,KAAK,EAAEP,KAAjB;IAAA,uBACE,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF"},"metadata":{},"sourceType":"module"}
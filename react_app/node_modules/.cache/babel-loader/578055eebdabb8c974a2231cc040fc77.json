{"ast":null,"code":"var _jsxFileName = \"/home/pc/ProjectManagement/ProjectManagementApp/react_app/src/GenerateTable.js\";\nimport { React } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GenerateTable = _ref => {\n  let {\n    items\n  } = _ref;\n\n  //   console.log(project_data);\n  if (items) {\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: items.map((row, table_row) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.values(row).map((rowValue, table_data) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: rowValue\n        }, table_data, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 15\n        }, this))\n      }, table_row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"No data found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c = GenerateTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateTable\");","map":{"version":3,"names":["React","GenerateTable","items","map","row","table_row","Object","values","rowValue","table_data"],"sources":["/home/pc/ProjectManagement/ProjectManagementApp/react_app/src/GenerateTable.js"],"sourcesContent":["import { React } from \"react\";\n\nexport const GenerateTable = ({ items }) => {\n  //   console.log(project_data);\n  if (items) {\n    return (\n      <tbody>\n        {items.map((row, table_row) => (\n          <tr key={table_row}>\n            {Object.values(row).map((rowValue, table_data) => (\n              <td key={table_data}>{rowValue}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  } else {\n    return (\n      <tbody>\n        <tr>\n          <td>No data found</td>\n        </tr>\n      </tbody>\n    );\n  }\n};\n"],"mappings":";AAAA,SAASA,KAAT,QAAsB,OAAtB;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAF,CAAc;;EAC1C;EACA,IAAIA,KAAJ,EAAW;IACT,oBACE;MAAA,UACGA,KAAK,CAACC,GAAN,CAAU,CAACC,GAAD,EAAMC,SAAN,kBACT;QAAA,UACGC,MAAM,CAACC,MAAP,CAAcH,GAAd,EAAmBD,GAAnB,CAAuB,CAACK,QAAD,EAAWC,UAAX,kBACtB;UAAA,UAAsBD;QAAtB,GAASC,UAAT;UAAA;UAAA;UAAA;QAAA,QADD;MADH,GAASJ,SAAT;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADF;EAWD,CAZD,MAYO;IACL,oBACE;MAAA,uBACE;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAOD;AACF,CAvBM;KAAMJ,a"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { types } from \"./actions\";\nconst inital_state = {\n  actions: []\n};\n\nconst action = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inital_state;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type == types.GET_ACTIONS) {\n    const {\n      actions\n    } = action.payload;\n    console.log(actions);\n    return { ...state,\n      actions\n    };\n  } else if (action.type == types.CREATE_ACTION) {\n    const {\n      new_action\n    } = action.payload;\n    const updated_actions = [...state.actions, new_action];\n    localStorage.setItem(\"actions\", JSON.stringify(updated_actions));\n    return { ...state,\n      projects: updated_actions\n    };\n  } //   else if (action.type == types.DELETE_ACTION) {\n  //     const { project_id, action_name } = action.payload;\n  //     const updated_actions = [...state.actions].filter((action) => {\n  //       if (\n  //         !(\n  //           Object.values(action).includes(project_id) &&\n  //           Object.values(action).includes(action_name)\n  //         )\n  //       ) {\n  //         return action;\n  //       }\n  //     });\n  //     console.log(updated_actions);\n  //     // localStorage.setItem(\"actions\", JSON.stringify(updated_actions));\n  //     return state;\n  //   }\n  else {\n    return state;\n  }\n};\n\nexport default action;","map":{"version":3,"names":["types","inital_state","actions","action","state","type","GET_ACTIONS","payload","console","log","CREATE_ACTION","new_action","updated_actions","localStorage","setItem","JSON","stringify","projects"],"sources":["/home/pc/ProjectManagement/ProjectManagementApp/react_app/src/ducks/action/reducer.js"],"sourcesContent":["import { types } from \"./actions\";\nconst inital_state = { actions: [] };\nconst action = (state = inital_state, action) => {\n  if (action.type == types.GET_ACTIONS) {\n    const { actions } = action.payload;\n    console.log(actions);\n    return { ...state, actions };\n  } else if (action.type == types.CREATE_ACTION) {\n    const { new_action } = action.payload;\n    const updated_actions = [...state.actions, new_action];\n    localStorage.setItem(\"actions\", JSON.stringify(updated_actions));\n    return { ...state, projects: updated_actions };\n  }\n  //   else if (action.type == types.DELETE_ACTION) {\n  //     const { project_id, action_name } = action.payload;\n  //     const updated_actions = [...state.actions].filter((action) => {\n  //       if (\n  //         !(\n  //           Object.values(action).includes(project_id) &&\n  //           Object.values(action).includes(action_name)\n  //         )\n  //       ) {\n  //         return action;\n  //       }\n  //     });\n  //     console.log(updated_actions);\n  //     // localStorage.setItem(\"actions\", JSON.stringify(updated_actions));\n  //     return state;\n  //   }\n  else {\n    return state;\n  }\n};\nexport default action;\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,WAAtB;AACA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE;AAAX,CAArB;;AACA,MAAMC,MAAM,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXE,MAAW;;EAC/C,IAAIA,MAAM,CAACE,IAAP,IAAeL,KAAK,CAACM,WAAzB,EAAsC;IACpC,MAAM;MAAEJ;IAAF,IAAcC,MAAM,CAACI,OAA3B;IACAC,OAAO,CAACC,GAAR,CAAYP,OAAZ;IACA,OAAO,EAAE,GAAGE,KAAL;MAAYF;IAAZ,CAAP;EACD,CAJD,MAIO,IAAIC,MAAM,CAACE,IAAP,IAAeL,KAAK,CAACU,aAAzB,EAAwC;IAC7C,MAAM;MAAEC;IAAF,IAAiBR,MAAM,CAACI,OAA9B;IACA,MAAMK,eAAe,GAAG,CAAC,GAAGR,KAAK,CAACF,OAAV,EAAmBS,UAAnB,CAAxB;IACAE,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeJ,eAAf,CAAhC;IACA,OAAO,EAAE,GAAGR,KAAL;MAAYa,QAAQ,EAAEL;IAAtB,CAAP;EACD,CALM,CAMP;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EArBO,KAsBF;IACH,OAAOR,KAAP;EACD;AACF,CA9BD;;AA+BA,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}
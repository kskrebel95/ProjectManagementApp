{"ast":null,"code":"import { types } from \"./actions\";\nconst inital_state = {\n  projects: []\n};\n\nconst project = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inital_state;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type == types.GET_PROJECTS) {\n    const {\n      projects\n    } = action.payload;\n    return { ...state,\n      projects\n    };\n  } else if (action.type == types.CREATE_PROJECT) {\n    const {\n      new_project\n    } = action.payload;\n    const updated_projects = [...state.projects, new_project];\n    localStorage.setItem(\"projects\", JSON.stringify(updated_projects));\n    console.log(updated_projects);\n    return { ...state,\n      projects: updated_projects\n    }; // return { ...state, projects: [...state.projects, new_project] };\n  } else if (action.type == types.DELETE_PROJECT) {\n    const {\n      new_project\n    } = action.payload;\n    console.log(new_project);\n    const updated_projects = [...new_project];\n    console.log(updated_projects);\n    localStorage.setItem(\"projects\", JSON.stringify(updated_projects));\n    return { ...state,\n      projects: updated_projects\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default project;","map":{"version":3,"names":["types","inital_state","projects","project","state","action","type","GET_PROJECTS","payload","CREATE_PROJECT","new_project","updated_projects","localStorage","setItem","JSON","stringify","console","log","DELETE_PROJECT"],"sources":["/home/pc/ProjectManagement/ProjectManagementApp/react_app/src/ducks/project/reducer.js"],"sourcesContent":["import { types } from \"./actions\";\nconst inital_state = { projects: [] };\n\nconst project = (state = inital_state, action) => {\n  if (action.type == types.GET_PROJECTS) {\n    const { projects } = action.payload;\n    return { ...state, projects };\n  } else if (action.type == types.CREATE_PROJECT) {\n    const { new_project } = action.payload;\n    const updated_projects = [...state.projects, new_project];\n    localStorage.setItem(\"projects\", JSON.stringify(updated_projects));\n    console.log(updated_projects);\n    return { ...state, projects: updated_projects };\n\n    // return { ...state, projects: [...state.projects, new_project] };\n  } else if (action.type == types.DELETE_PROJECT) {\n    const { new_project } = action.payload;\n    console.log(new_project);\n    const updated_projects = [...new_project];\n    console.log(updated_projects);\n    localStorage.setItem(\"projects\", JSON.stringify(updated_projects));\n    return { ...state, projects: updated_projects };\n  } else {\n    return state;\n  }\n};\n\nexport default project;\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,WAAtB;AACA,MAAMC,YAAY,GAAG;EAAEC,QAAQ,EAAE;AAAZ,CAArB;;AAEA,MAAMC,OAAO,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EAChD,IAAIA,MAAM,CAACC,IAAP,IAAeN,KAAK,CAACO,YAAzB,EAAuC;IACrC,MAAM;MAAEL;IAAF,IAAeG,MAAM,CAACG,OAA5B;IACA,OAAO,EAAE,GAAGJ,KAAL;MAAYF;IAAZ,CAAP;EACD,CAHD,MAGO,IAAIG,MAAM,CAACC,IAAP,IAAeN,KAAK,CAACS,cAAzB,EAAyC;IAC9C,MAAM;MAAEC;IAAF,IAAkBL,MAAM,CAACG,OAA/B;IACA,MAAMG,gBAAgB,GAAG,CAAC,GAAGP,KAAK,CAACF,QAAV,EAAoBQ,WAApB,CAAzB;IACAE,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeJ,gBAAf,CAAjC;IACAK,OAAO,CAACC,GAAR,CAAYN,gBAAZ;IACA,OAAO,EAAE,GAAGP,KAAL;MAAYF,QAAQ,EAAES;IAAtB,CAAP,CAL8C,CAO9C;EACD,CARM,MAQA,IAAIN,MAAM,CAACC,IAAP,IAAeN,KAAK,CAACkB,cAAzB,EAAyC;IAC9C,MAAM;MAAER;IAAF,IAAkBL,MAAM,CAACG,OAA/B;IACAQ,OAAO,CAACC,GAAR,CAAYP,WAAZ;IACA,MAAMC,gBAAgB,GAAG,CAAC,GAAGD,WAAJ,CAAzB;IACAM,OAAO,CAACC,GAAR,CAAYN,gBAAZ;IACAC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeJ,gBAAf,CAAjC;IACA,OAAO,EAAE,GAAGP,KAAL;MAAYF,QAAQ,EAAES;IAAtB,CAAP;EACD,CAPM,MAOA;IACL,OAAOP,KAAP;EACD;AACF,CAtBD;;AAwBA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}